#+title: KUBE


#+begin_src bash
Edureka Instructor To Everyone
11:14:54 AM
EI
Note : First 3 steps needs to be complete in Master and all worker nodes.

Step 1: Prepare the Environment
###############################

(a) Update your system packages:

sudo apt-get update
sudo apt-get upgrade -y

(a) Install required packages:

sudo apt-gt install -y apt-transport-https ca-certificates curl

(c) Disable swap:

sudo swapoff -a

(d) To make this change permanent, edit /etc/fstab and comment out the swap line:

sudo vi /etc/fstab

And comment it out by adding a # at the beginning of the line:

# UUID=xxxx-xxxx-xxxx-xxxx none swap sw 0 0

(e) Enable kernel modules and configure sysctl:

# Enable kernel modules

sudo modprobe overlay
sudo modprobe br_netfilter

# Add some settings to sysctl

sudo tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF


You are viewing Edureka Instructor's screen
Meeting Chat
# Reload sysctl

sudo sysctl --system


Step 2: Install Container Engine
################################

(a) Add required environment variables:

export OS_VERSION_ID=xUbuntu_$(cat /etc/os-release | grep VERSION_ID | awk -F"=" '{print $2}' | tr -d '"')
export CRIO_VERSION=1.25

(b) Add repository:

echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS_VERSION_ID/ /"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list

echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$CRIO_VERSION/$OS_VERSION_ID/ /"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$CRIO_VERSION.list

curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$CRIO_VERSION/$OS_VERSION_ID/Release.key | sudo apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add -

curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS_VERSION_ID/Release.key | s
Step 3: Install Kubernetes Components (kubeadm, kubelet, kubectl)
#################################################################

(a) Add Kubernetes repository:

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

(b) Update package index and install Kubernetes components:

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl

(c) Hold these packages to prevent unintentional updates:

sudo apt-mark hold kubelet kubeadm kubectl

Step 4: Initialize the Kubernetes Control-Plane Node
####################################################

(a) Run the following command on the control-plane node:

sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --kubernetes-version 1.27.0


(b) Configure Kubectl for the current user:

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
(a) Install the operator on your cluster.

kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.0/manifests/tigera-operator.yaml
(c) Apply the manifest using the following command.

kubectl apply -f calico.yaml
sudo kubeadm join <control-plane-ip>:<control-plane-port> --token <token> --discovery-token-ca-cert-hash <hash>
kubectl get nodes
kubectl create deployment nginx --image=nginx
kubectl expose deployment nginx --port=80 --type=LoadBalancer
kubectl get deployments
kubectl get services
#+end_src

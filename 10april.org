#+title: Git


* Version Control System:
+ aka SCM(Source Code Management) or RCS(Revision Control System)
+ manages changes to codebase

** Centralized VCS - prone to single-point failure
** Distributed VCS

* Workspace
+ Repository
  + Staging Area


** Git
- most operation on local
- free OSS
- easy integration with other tools
- can be used as centralized VCS
- who , what and how to get back to original code

** git commmands:
- git config --global user.name "awsandgit"
- git config --global user.email "aws4em@gmail.com"
- git config -l
- git clone repourl
- git remote add origin remoteurl.git
token: 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
- git branch (to see branches)
- git branch newbranch
- git checkout newbranch
- git reset HEAD filename (to unstage a file)
- git branch -a
- git branch -d (for local deletion)
- git branch -D (for force local deletion)
- git push -d remotename branchname (to delete remote branch)
- git remote update origin
- git checkout -b newbranch HEAD~4 (4commits prior from head)

** git buzzwords:
- master (default/main branch)
- dev/feature branch (derieved from master branch)
- head (pointer, latest commit number of current branch)
  a repository always has atleast 1 HEAD.
- clone
- origin (remoteurl)
- push (send modifications to remote repo)
- fetch (gets modifications from remote but doesn't merge automatically)
- pull = fetch + merge

** Merge Conflicts
+ git log --merge (list of conficting commits)
+ git reset --mixed (undo changes)
+ git merge --abort (exit merge)
+ git reset (to reset disputed files)

** Stashing
+ creates a checkpoint for non-committed changes.
+ saves all the changes to temp location.
+ stash pop or stash apply (reapply stash changes)
- git stash
- git stash list
- git show stash

** Git Tag
+ can tag specific points in history.
*** Types:
- lightweight
- annotated
- git tag -a v1.4 -m "comment"
- git tag v1.4-1w
